{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;qBAAwB,SAAS;;AAAlB,SAAS,SAAS,GAAW;mCAAN,IAAI;AAAJ,MAAI;;;AAEzC,KAAI,IAAI,GAAG,EAAE,CAAC;;;;;;;AAEd,uBAAgB,IAAI,8HAAE;OAAb,GAAG;AAAY,IAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,CAAA,CAAE,IAAI,CAAC,GAAG,CAAC,CAAC;GAAE;;;;;;;;;;;;;;;;AAEhF,QAAO,SAAS,OAAO,CAAE,IAAI,EAAkB;MAAhB,MAAM,yDAAG,KAAK;;AAE5C,MAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;;AAEzB,MAAI,IAAI,CAAC,MAAM,CAAC,EAAE;;;;;;;;AAGjB,gBAAY,EAAE,sBAAgB,IAAI,CAAC,MAAM,CAAC,mIAAE;SAArB,GAAG;;AAEzB,SAAI,MAAM,GAAG,EAAE,CAAC;;;AAGhB,UAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;;;AAGhC,UAAI,GAAG,CAAC,CAAC,CAAC,YAAY,KAAK,EAAE;;AAE5B,WACC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,QAAQ,IAC7B,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC5B;AAAE,iBAAS,YAAY,CAAC;QAAE;;AAE3B,WACC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,UAAU,IAC/B,EAAE,IAAI,CAAC,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,AAAC,EAC/B;AAAE,iBAAS,YAAY,CAAC;QAAE;;AAE3B,aAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;OAC5B,MAAI;AACJ,aAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;OACzB;MACD;AACD,YAAO,MAAM,CAAC;KACd;;;;;;;;;;;;;;;GAED;;AAED,MAAI,MAAM,EAAE;AACX,SAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;GACnD;;AAED,SAAO,EAAE,CAAC;EACV,CAAC;CACF;;AAAA,CAAC","file":"index.js","sourcesContent":["export default function signature (...args) {\n\n\tlet sigs = {};\n\n\tfor( let sig of args ){ (sigs[sig.length] = sigs[sig.length] || []).push(sig); }\n\n\treturn function mapArgs (args, _throw = false) {\n\n\t\tlet argLen = args.length;\n\n\t\tif( sigs[argLen] ){\n\n\t\t\t// For every signature in array\n\t\t\tperSignature: for( let sig of sigs[argLen] ){\n\n\t\t\t\tlet result = {};\n\n\t\t\t\t// Compare each arg\n\t\t\t\tfor( let i = 0; i < argLen; i++ ){\n\n\t\t\t\t\t// If type is set, enforce type check\n\t\t\t\t\tif( sig[i] instanceof Array ){\n\n\t\t\t\t\t\tif(\n\t\t\t\t\t\t\ttypeof sig[i][0] === 'string' &&\n\t\t\t\t\t\t\ttypeof args[i] !== sig[i][0]\n\t\t\t\t\t\t){ continue perSignature; }\n\n\t\t\t\t\t\tif(\n\t\t\t\t\t\t\ttypeof sig[i][0] === 'function' &&\n\t\t\t\t\t\t\t!(args[i] instanceof sig[i][0])\n\t\t\t\t\t\t){ continue perSignature; }\n\n\t\t\t\t\t\tresult[sig[i][1]] = args[i];\n\t\t\t\t\t}else{\t\t\t\t\t\n\t\t\t\t\t\tresult[sig[i]] = args[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t}\n\n\t\tif( _throw ){\n\t\t\tthrow new Error('No matching function signature!');\n\t\t}\n\n\t\treturn {};\n\t};\n};"]}